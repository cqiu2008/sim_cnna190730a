// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cnna,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=870,HLS_SYN_DSP=2146,HLS_SYN_FF=71221,HLS_SYN_LUT=189690,HLS_VERSION=2018_3}" *)

module cnna (
        ap_clk,
        ap_rst_n,
       m_axi_WEIGHTS_DDR_AWVALID,
       m_axi_WEIGHTS_DDR_AWREADY,
       m_axi_WEIGHTS_DDR_AWADDR,
       m_axi_WEIGHTS_DDR_AWID,
       m_axi_WEIGHTS_DDR_AWLEN,
       m_axi_WEIGHTS_DDR_AWSIZE,
       m_axi_WEIGHTS_DDR_AWBURST,
       m_axi_WEIGHTS_DDR_AWLOCK,
       m_axi_WEIGHTS_DDR_AWCACHE,
       m_axi_WEIGHTS_DDR_AWPROT,
       m_axi_WEIGHTS_DDR_AWQOS,
       m_axi_WEIGHTS_DDR_AWREGION,
       m_axi_WEIGHTS_DDR_AWUSER,
       m_axi_WEIGHTS_DDR_WVALID,
       m_axi_WEIGHTS_DDR_WREADY,
       m_axi_WEIGHTS_DDR_WDATA,
       m_axi_WEIGHTS_DDR_WSTRB,
       m_axi_WEIGHTS_DDR_WLAST,
       m_axi_WEIGHTS_DDR_WID,
       m_axi_WEIGHTS_DDR_WUSER,
       m_axi_WEIGHTS_DDR_ARVALID,
       m_axi_WEIGHTS_DDR_ARREADY,
       m_axi_WEIGHTS_DDR_ARADDR,
       m_axi_WEIGHTS_DDR_ARID,
       m_axi_WEIGHTS_DDR_ARLEN,
       m_axi_WEIGHTS_DDR_ARSIZE,
       m_axi_WEIGHTS_DDR_ARBURST,
       m_axi_WEIGHTS_DDR_ARLOCK,
       m_axi_WEIGHTS_DDR_ARCACHE,
       m_axi_WEIGHTS_DDR_ARPROT,
       m_axi_WEIGHTS_DDR_ARQOS,
       m_axi_WEIGHTS_DDR_ARREGION,
       m_axi_WEIGHTS_DDR_ARUSER,
       m_axi_WEIGHTS_DDR_RVALID,
       m_axi_WEIGHTS_DDR_RREADY,
       m_axi_WEIGHTS_DDR_RDATA,
       m_axi_WEIGHTS_DDR_RLAST,
       m_axi_WEIGHTS_DDR_RID,
       m_axi_WEIGHTS_DDR_RUSER,
       m_axi_WEIGHTS_DDR_RRESP,
       m_axi_WEIGHTS_DDR_BVALID,
       m_axi_WEIGHTS_DDR_BREADY,
       m_axi_WEIGHTS_DDR_BRESP,
       m_axi_WEIGHTS_DDR_BID,
       m_axi_WEIGHTS_DDR_BUSER,
        m_axi_FIN_DDR_AWVALID,
        m_axi_FIN_DDR_AWREADY,
        m_axi_FIN_DDR_AWADDR,
        m_axi_FIN_DDR_AWID,
        m_axi_FIN_DDR_AWLEN,
        m_axi_FIN_DDR_AWSIZE,
        m_axi_FIN_DDR_AWBURST,
        m_axi_FIN_DDR_AWLOCK,
        m_axi_FIN_DDR_AWCACHE,
        m_axi_FIN_DDR_AWPROT,
        m_axi_FIN_DDR_AWQOS,
        m_axi_FIN_DDR_AWREGION,
        m_axi_FIN_DDR_AWUSER,
        m_axi_FIN_DDR_WVALID,
        m_axi_FIN_DDR_WREADY,
        m_axi_FIN_DDR_WDATA,
        m_axi_FIN_DDR_WSTRB,
        m_axi_FIN_DDR_WLAST,
        m_axi_FIN_DDR_WID,
        m_axi_FIN_DDR_WUSER,
        m_axi_FIN_DDR_ARVALID,
        m_axi_FIN_DDR_ARREADY,
        m_axi_FIN_DDR_ARADDR,
        m_axi_FIN_DDR_ARID,
        m_axi_FIN_DDR_ARLEN,
        m_axi_FIN_DDR_ARSIZE,
        m_axi_FIN_DDR_ARBURST,
        m_axi_FIN_DDR_ARLOCK,
        m_axi_FIN_DDR_ARCACHE,
        m_axi_FIN_DDR_ARPROT,
        m_axi_FIN_DDR_ARQOS,
        m_axi_FIN_DDR_ARREGION,
        m_axi_FIN_DDR_ARUSER,
        m_axi_FIN_DDR_RVALID,
        m_axi_FIN_DDR_RREADY,
        m_axi_FIN_DDR_RDATA,
        m_axi_FIN_DDR_RLAST,
        m_axi_FIN_DDR_RID,
        m_axi_FIN_DDR_RUSER,
        m_axi_FIN_DDR_RRESP,
        m_axi_FIN_DDR_BVALID,
        m_axi_FIN_DDR_BREADY,
        m_axi_FIN_DDR_BRESP,
        m_axi_FIN_DDR_BID,
        m_axi_FIN_DDR_BUSER,
        m_axi_FOUT_DDR_AWVALID,
        m_axi_FOUT_DDR_AWREADY,
        m_axi_FOUT_DDR_AWADDR,
        m_axi_FOUT_DDR_AWID,
        m_axi_FOUT_DDR_AWLEN,
        m_axi_FOUT_DDR_AWSIZE,
        m_axi_FOUT_DDR_AWBURST,
        m_axi_FOUT_DDR_AWLOCK,
        m_axi_FOUT_DDR_AWCACHE,
        m_axi_FOUT_DDR_AWPROT,
        m_axi_FOUT_DDR_AWQOS,
        m_axi_FOUT_DDR_AWREGION,
        m_axi_FOUT_DDR_AWUSER,
        m_axi_FOUT_DDR_WVALID,
        m_axi_FOUT_DDR_WREADY,
        m_axi_FOUT_DDR_WDATA,
        m_axi_FOUT_DDR_WSTRB,
        m_axi_FOUT_DDR_WLAST,
        m_axi_FOUT_DDR_WID,
        m_axi_FOUT_DDR_WUSER,
        m_axi_FOUT_DDR_ARVALID,
        m_axi_FOUT_DDR_ARREADY,
        m_axi_FOUT_DDR_ARADDR,
        m_axi_FOUT_DDR_ARID,
        m_axi_FOUT_DDR_ARLEN,
        m_axi_FOUT_DDR_ARSIZE,
        m_axi_FOUT_DDR_ARBURST,
        m_axi_FOUT_DDR_ARLOCK,
        m_axi_FOUT_DDR_ARCACHE,
        m_axi_FOUT_DDR_ARPROT,
        m_axi_FOUT_DDR_ARQOS,
        m_axi_FOUT_DDR_ARREGION,
        m_axi_FOUT_DDR_ARUSER,
        m_axi_FOUT_DDR_RVALID,
        m_axi_FOUT_DDR_RREADY,
        m_axi_FOUT_DDR_RDATA,
        m_axi_FOUT_DDR_RLAST,
        m_axi_FOUT_DDR_RID,
        m_axi_FOUT_DDR_RUSER,
        m_axi_FOUT_DDR_RRESP,
        m_axi_FOUT_DDR_BVALID,
        m_axi_FOUT_DDR_BREADY,
        m_axi_FOUT_DDR_BRESP,
        m_axi_FOUT_DDR_BID,
        m_axi_FOUT_DDR_BUSER,
        s_axi_axilite_AWVALID,
        s_axi_axilite_AWREADY,
        s_axi_axilite_AWADDR,
        s_axi_axilite_WVALID,
        s_axi_axilite_WREADY,
        s_axi_axilite_WDATA,
        s_axi_axilite_WSTRB,
        s_axi_axilite_ARVALID,
        s_axi_axilite_ARREADY,
        s_axi_axilite_ARADDR,
        s_axi_axilite_RVALID,
        s_axi_axilite_RREADY,
        s_axi_axilite_RDATA,
        s_axi_axilite_RRESP,
        s_axi_axilite_BVALID,
        s_axi_axilite_BREADY,
        s_axi_axilite_BRESP,
        interrupt
);
parameter    C_S_AXI_AXILITE_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITE_ADDR_WIDTH = 10;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_WEIGHTS_DDR_ID_WIDTH = 1;
parameter    C_M_AXI_WEIGHTS_DDR_ADDR_WIDTH = 32;
parameter    C_M_AXI_WEIGHTS_DDR_DATA_WIDTH = 128;
parameter    C_M_AXI_WEIGHTS_DDR_AWUSER_WIDTH = 1;
parameter    C_M_AXI_WEIGHTS_DDR_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WEIGHTS_DDR_WUSER_WIDTH = 1;
parameter    C_M_AXI_WEIGHTS_DDR_RUSER_WIDTH = 1;
parameter    C_M_AXI_WEIGHTS_DDR_BUSER_WIDTH = 1;
parameter    C_M_AXI_WEIGHTS_DDR_USER_VALUE = 0;
parameter    C_M_AXI_WEIGHTS_DDR_PROT_VALUE = 0;
parameter    C_M_AXI_WEIGHTS_DDR_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_FIN_DDR_ID_WIDTH = 1;
parameter    C_M_AXI_FIN_DDR_ADDR_WIDTH = 32;
parameter    C_M_AXI_FIN_DDR_DATA_WIDTH = 128;
parameter    C_M_AXI_FIN_DDR_AWUSER_WIDTH = 1;
parameter    C_M_AXI_FIN_DDR_ARUSER_WIDTH = 1;
parameter    C_M_AXI_FIN_DDR_WUSER_WIDTH = 1;
parameter    C_M_AXI_FIN_DDR_RUSER_WIDTH = 1;
parameter    C_M_AXI_FIN_DDR_BUSER_WIDTH = 1;
parameter    C_M_AXI_FIN_DDR_USER_VALUE = 0;
parameter    C_M_AXI_FIN_DDR_PROT_VALUE = 0;
parameter    C_M_AXI_FIN_DDR_CACHE_VALUE = 3;
parameter    C_M_AXI_FOUT_DDR_ID_WIDTH = 1;
parameter    C_M_AXI_FOUT_DDR_ADDR_WIDTH = 32;
parameter    C_M_AXI_FOUT_DDR_DATA_WIDTH = 128;
parameter    C_M_AXI_FOUT_DDR_AWUSER_WIDTH = 1;
parameter    C_M_AXI_FOUT_DDR_ARUSER_WIDTH = 1;
parameter    C_M_AXI_FOUT_DDR_WUSER_WIDTH = 1;
parameter    C_M_AXI_FOUT_DDR_RUSER_WIDTH = 1;
parameter    C_M_AXI_FOUT_DDR_BUSER_WIDTH = 1;
parameter    C_M_AXI_FOUT_DDR_USER_VALUE = 0;
parameter    C_M_AXI_FOUT_DDR_PROT_VALUE = 0;
parameter    C_M_AXI_FOUT_DDR_CACHE_VALUE = 3;

parameter C_S_AXI_AXILITE_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WEIGHTS_DDR_WSTRB_WIDTH = (128 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_FIN_DDR_WSTRB_WIDTH = (128 / 8)   ;
parameter C_M_AXI_FOUT_DDR_WSTRB_WIDTH = (128 / 8)  ;
parameter C_M_AXI_LEN_WIDTH   = 32                  ;
parameter C_M_AXI_ADDR_WIDTH  = 32                  ;
parameter C_RAM_ADDR_WIDTH    = 9                   ; 
parameter C_RAM_DATA_WIDTH    = 128                 ; 
parameter C_COEF_DATA         = 8*16*32             ;
parameter C_BIAS_DATA         = 32                  ;

input   ap_clk;
input   ap_rst_n;
output   m_axi_WEIGHTS_DDR_AWVALID;
input   m_axi_WEIGHTS_DDR_AWREADY;
output  [C_M_AXI_WEIGHTS_DDR_ADDR_WIDTH - 1:0] m_axi_WEIGHTS_DDR_AWADDR;
output  [C_M_AXI_WEIGHTS_DDR_ID_WIDTH - 1:0] m_axi_WEIGHTS_DDR_AWID;
output  [7:0] m_axi_WEIGHTS_DDR_AWLEN;
output  [2:0] m_axi_WEIGHTS_DDR_AWSIZE;
output  [1:0] m_axi_WEIGHTS_DDR_AWBURST;
output  [1:0] m_axi_WEIGHTS_DDR_AWLOCK;
output  [3:0] m_axi_WEIGHTS_DDR_AWCACHE;
output  [2:0] m_axi_WEIGHTS_DDR_AWPROT;
output  [3:0] m_axi_WEIGHTS_DDR_AWQOS;
output  [3:0] m_axi_WEIGHTS_DDR_AWREGION;
output  [C_M_AXI_WEIGHTS_DDR_AWUSER_WIDTH - 1:0] m_axi_WEIGHTS_DDR_AWUSER;
output   m_axi_WEIGHTS_DDR_WVALID;
input   m_axi_WEIGHTS_DDR_WREADY;
output  [C_M_AXI_WEIGHTS_DDR_DATA_WIDTH - 1:0] m_axi_WEIGHTS_DDR_WDATA;
output  [C_M_AXI_WEIGHTS_DDR_WSTRB_WIDTH - 1:0] m_axi_WEIGHTS_DDR_WSTRB;
output   m_axi_WEIGHTS_DDR_WLAST;
output  [C_M_AXI_WEIGHTS_DDR_ID_WIDTH - 1:0] m_axi_WEIGHTS_DDR_WID;
output  [C_M_AXI_WEIGHTS_DDR_WUSER_WIDTH - 1:0] m_axi_WEIGHTS_DDR_WUSER;
output   m_axi_WEIGHTS_DDR_ARVALID;
input   m_axi_WEIGHTS_DDR_ARREADY;
output  [C_M_AXI_WEIGHTS_DDR_ADDR_WIDTH - 1:0] m_axi_WEIGHTS_DDR_ARADDR;
output  [C_M_AXI_WEIGHTS_DDR_ID_WIDTH - 1:0] m_axi_WEIGHTS_DDR_ARID;
output  [7:0] m_axi_WEIGHTS_DDR_ARLEN;
output  [2:0] m_axi_WEIGHTS_DDR_ARSIZE;
output  [1:0] m_axi_WEIGHTS_DDR_ARBURST;
output  [1:0] m_axi_WEIGHTS_DDR_ARLOCK;
output  [3:0] m_axi_WEIGHTS_DDR_ARCACHE;
output  [2:0] m_axi_WEIGHTS_DDR_ARPROT;
output  [3:0] m_axi_WEIGHTS_DDR_ARQOS;
output  [3:0] m_axi_WEIGHTS_DDR_ARREGION;
output  [C_M_AXI_WEIGHTS_DDR_ARUSER_WIDTH - 1:0] m_axi_WEIGHTS_DDR_ARUSER;
input   m_axi_WEIGHTS_DDR_RVALID;
output   m_axi_WEIGHTS_DDR_RREADY;
input  [C_M_AXI_WEIGHTS_DDR_DATA_WIDTH - 1:0] m_axi_WEIGHTS_DDR_RDATA;
input   m_axi_WEIGHTS_DDR_RLAST;
input  [C_M_AXI_WEIGHTS_DDR_ID_WIDTH - 1:0] m_axi_WEIGHTS_DDR_RID;
input  [C_M_AXI_WEIGHTS_DDR_RUSER_WIDTH - 1:0] m_axi_WEIGHTS_DDR_RUSER;
input  [1:0] m_axi_WEIGHTS_DDR_RRESP;
input   m_axi_WEIGHTS_DDR_BVALID;
output   m_axi_WEIGHTS_DDR_BREADY;
input  [1:0] m_axi_WEIGHTS_DDR_BRESP;
input  [C_M_AXI_WEIGHTS_DDR_ID_WIDTH - 1:0] m_axi_WEIGHTS_DDR_BID;
input  [C_M_AXI_WEIGHTS_DDR_BUSER_WIDTH - 1:0] m_axi_WEIGHTS_DDR_BUSER;
output   m_axi_FIN_DDR_AWVALID;
input   m_axi_FIN_DDR_AWREADY;
output  [C_M_AXI_FIN_DDR_ADDR_WIDTH - 1:0] m_axi_FIN_DDR_AWADDR;
output  [C_M_AXI_FIN_DDR_ID_WIDTH - 1:0] m_axi_FIN_DDR_AWID;
output  [7:0] m_axi_FIN_DDR_AWLEN;
output  [2:0] m_axi_FIN_DDR_AWSIZE;
output  [1:0] m_axi_FIN_DDR_AWBURST;
output  [1:0] m_axi_FIN_DDR_AWLOCK;
output  [3:0] m_axi_FIN_DDR_AWCACHE;
output  [2:0] m_axi_FIN_DDR_AWPROT;
output  [3:0] m_axi_FIN_DDR_AWQOS;
output  [3:0] m_axi_FIN_DDR_AWREGION;
output  [C_M_AXI_FIN_DDR_AWUSER_WIDTH - 1:0] m_axi_FIN_DDR_AWUSER;
output   m_axi_FIN_DDR_WVALID;
input   m_axi_FIN_DDR_WREADY;
output  [C_M_AXI_FIN_DDR_DATA_WIDTH - 1:0] m_axi_FIN_DDR_WDATA;
output  [C_M_AXI_FIN_DDR_WSTRB_WIDTH - 1:0] m_axi_FIN_DDR_WSTRB;
output   m_axi_FIN_DDR_WLAST;
output  [C_M_AXI_FIN_DDR_ID_WIDTH - 1:0] m_axi_FIN_DDR_WID;
output  [C_M_AXI_FIN_DDR_WUSER_WIDTH - 1:0] m_axi_FIN_DDR_WUSER;
output   m_axi_FIN_DDR_ARVALID;
input   m_axi_FIN_DDR_ARREADY;
output  [C_M_AXI_FIN_DDR_ADDR_WIDTH - 1:0] m_axi_FIN_DDR_ARADDR;
output  [C_M_AXI_FIN_DDR_ID_WIDTH - 1:0] m_axi_FIN_DDR_ARID;
output  [7:0] m_axi_FIN_DDR_ARLEN;
output  [2:0] m_axi_FIN_DDR_ARSIZE;
output  [1:0] m_axi_FIN_DDR_ARBURST;
output  [1:0] m_axi_FIN_DDR_ARLOCK;
output  [3:0] m_axi_FIN_DDR_ARCACHE;
output  [2:0] m_axi_FIN_DDR_ARPROT;
output  [3:0] m_axi_FIN_DDR_ARQOS;
output  [3:0] m_axi_FIN_DDR_ARREGION;
output  [C_M_AXI_FIN_DDR_ARUSER_WIDTH - 1:0] m_axi_FIN_DDR_ARUSER;
input   m_axi_FIN_DDR_RVALID;
output   m_axi_FIN_DDR_RREADY;
input  [C_M_AXI_FIN_DDR_DATA_WIDTH - 1:0] m_axi_FIN_DDR_RDATA;
input   m_axi_FIN_DDR_RLAST;
input  [C_M_AXI_FIN_DDR_ID_WIDTH - 1:0] m_axi_FIN_DDR_RID;
input  [C_M_AXI_FIN_DDR_RUSER_WIDTH - 1:0] m_axi_FIN_DDR_RUSER;
input  [1:0] m_axi_FIN_DDR_RRESP;
input   m_axi_FIN_DDR_BVALID;
output   m_axi_FIN_DDR_BREADY;
input  [1:0] m_axi_FIN_DDR_BRESP;
input  [C_M_AXI_FIN_DDR_ID_WIDTH - 1:0] m_axi_FIN_DDR_BID;
input  [C_M_AXI_FIN_DDR_BUSER_WIDTH - 1:0] m_axi_FIN_DDR_BUSER;
output   m_axi_FOUT_DDR_AWVALID;
input   m_axi_FOUT_DDR_AWREADY;
output  [C_M_AXI_FOUT_DDR_ADDR_WIDTH - 1:0] m_axi_FOUT_DDR_AWADDR;
output  [C_M_AXI_FOUT_DDR_ID_WIDTH - 1:0] m_axi_FOUT_DDR_AWID;
output  [7:0] m_axi_FOUT_DDR_AWLEN;
output  [2:0] m_axi_FOUT_DDR_AWSIZE;
output  [1:0] m_axi_FOUT_DDR_AWBURST;
output  [1:0] m_axi_FOUT_DDR_AWLOCK;
output  [3:0] m_axi_FOUT_DDR_AWCACHE;
output  [2:0] m_axi_FOUT_DDR_AWPROT;
output  [3:0] m_axi_FOUT_DDR_AWQOS;
output  [3:0] m_axi_FOUT_DDR_AWREGION;
output  [C_M_AXI_FOUT_DDR_AWUSER_WIDTH - 1:0] m_axi_FOUT_DDR_AWUSER;
output   m_axi_FOUT_DDR_WVALID;
input   m_axi_FOUT_DDR_WREADY;
output  [C_M_AXI_FOUT_DDR_DATA_WIDTH - 1:0] m_axi_FOUT_DDR_WDATA;
output  [C_M_AXI_FOUT_DDR_WSTRB_WIDTH - 1:0] m_axi_FOUT_DDR_WSTRB;
output   m_axi_FOUT_DDR_WLAST;
output  [C_M_AXI_FOUT_DDR_ID_WIDTH - 1:0] m_axi_FOUT_DDR_WID;
output  [C_M_AXI_FOUT_DDR_WUSER_WIDTH - 1:0] m_axi_FOUT_DDR_WUSER;
output   m_axi_FOUT_DDR_ARVALID;
input   m_axi_FOUT_DDR_ARREADY;
output  [C_M_AXI_FOUT_DDR_ADDR_WIDTH - 1:0] m_axi_FOUT_DDR_ARADDR;
output  [C_M_AXI_FOUT_DDR_ID_WIDTH - 1:0] m_axi_FOUT_DDR_ARID;
output  [7:0] m_axi_FOUT_DDR_ARLEN;
output  [2:0] m_axi_FOUT_DDR_ARSIZE;
output  [1:0] m_axi_FOUT_DDR_ARBURST;
output  [1:0] m_axi_FOUT_DDR_ARLOCK;
output  [3:0] m_axi_FOUT_DDR_ARCACHE;
output  [2:0] m_axi_FOUT_DDR_ARPROT;
output  [3:0] m_axi_FOUT_DDR_ARQOS;
output  [3:0] m_axi_FOUT_DDR_ARREGION;
output  [C_M_AXI_FOUT_DDR_ARUSER_WIDTH - 1:0] m_axi_FOUT_DDR_ARUSER;
input   m_axi_FOUT_DDR_RVALID;
output   m_axi_FOUT_DDR_RREADY;
input  [C_M_AXI_FOUT_DDR_DATA_WIDTH - 1:0] m_axi_FOUT_DDR_RDATA;
input   m_axi_FOUT_DDR_RLAST;
input  [C_M_AXI_FOUT_DDR_ID_WIDTH - 1:0] m_axi_FOUT_DDR_RID;
input  [C_M_AXI_FOUT_DDR_RUSER_WIDTH - 1:0] m_axi_FOUT_DDR_RUSER;
input  [1:0] m_axi_FOUT_DDR_RRESP;
input   m_axi_FOUT_DDR_BVALID;
output   m_axi_FOUT_DDR_BREADY;
input  [1:0] m_axi_FOUT_DDR_BRESP;
input  [C_M_AXI_FOUT_DDR_ID_WIDTH - 1:0] m_axi_FOUT_DDR_BID;
input  [C_M_AXI_FOUT_DDR_BUSER_WIDTH - 1:0] m_axi_FOUT_DDR_BUSER;
input   s_axi_axilite_AWVALID;
output   s_axi_axilite_AWREADY;
input  [C_S_AXI_AXILITE_ADDR_WIDTH - 1:0] s_axi_axilite_AWADDR;
input   s_axi_axilite_WVALID;
output   s_axi_axilite_WREADY;
input  [C_S_AXI_AXILITE_DATA_WIDTH - 1:0] s_axi_axilite_WDATA;
input  [C_S_AXI_AXILITE_WSTRB_WIDTH - 1:0] s_axi_axilite_WSTRB;
input   s_axi_axilite_ARVALID;
output   s_axi_axilite_ARREADY;
input  [C_S_AXI_AXILITE_ADDR_WIDTH - 1:0] s_axi_axilite_ARADDR;
output   s_axi_axilite_RVALID;
input   s_axi_axilite_RREADY;
output  [C_S_AXI_AXILITE_DATA_WIDTH - 1:0] s_axi_axilite_RDATA;
output  [1:0] s_axi_axilite_RRESP;
output   s_axi_axilite_BVALID;
input   s_axi_axilite_BREADY;
output  [1:0] s_axi_axilite_BRESP;
output   interrupt;

reg         ap_rst_n_inv    ;
reg  [1:0]  S_ap_cnt        ;
wire        ap_start        ;
reg         ap_start_1d     ; 
reg         ap_done         ;
reg         S_wap_start     ;
wire        S_wap_done      ;
reg         S_map_start     ;
wire        S_map_done      ;
wire        ap_idle         ;
wire        ap_ready        ;
wire   [31:0] wddr_V;
reg   [31:0] wddr_V_0_data_reg;
reg    wddr_V_0_vld_reg;
reg    wddr_V_0_ack_out;
wire   [31:0] fiddr_V;
reg   [31:0] fiddr_V_0_data_reg;
reg    fiddr_V_0_vld_reg;
reg    fiddr_V_0_ack_out;
wire   [31:0] foddr_V;
reg   [31:0] foddr_V_0_data_reg;
reg    foddr_V_0_vld_reg;
reg    foddr_V_0_ack_out;
wire    layer_enPara_cnvEn;
reg    layer_enPara_cnvEn_0_data_reg;
reg    layer_enPara_cnvEn_0_vld_reg;
reg    layer_enPara_cnvEn_0_ack_out;
wire    layer_enPara_poolEn;
reg    layer_enPara_poolEn_0_data_reg;
reg    layer_enPara_poolEn_0_vld_reg;
reg    layer_enPara_poolEn_0_ack_out;
wire   [15:0] layer_wPara_curLayerNum;
wire    layer_wPara_layerDivideType;
wire   [10:0] layer_wPara_sublayerNum_V;
wire   [10:0] layer_wPara_sublayerSeq_V;
wire   [1:0] layer_wPara_subLayerFlag;
wire   [31:0] layer_wPara_memAddrWeights_V;
wire   [31:0] layer_wPara_memAddrBias_V;
wire   [31:0] layer_wPara_memAddrScale_V;
wire   [31:0] layer_wPara_memAddrMean_V;
wire   [31:0] layer_wPara_memAddrVariance_V;
wire   [18:0] layer_wPara_compressionSize_V;
wire   [15:0] layer_wParaNext_curLayerNum;
wire    layer_wParaNext_layerDivideType;
wire   [10:0] layer_wParaNext_sublayerNum_V;
wire   [10:0] layer_wParaNext_sublayerSeq_V;
wire   [1:0] layer_wParaNext_subLayerFlag;
wire   [31:0] layer_wParaNext_memAddrWeights_V;
reg   [31:0] layer_wParaNext_memAddrWeights_V_0_data_reg;
reg    layer_wParaNext_memAddrWeights_V_0_vld_reg;
reg    layer_wParaNext_memAddrWeights_V_0_ack_out;
wire   [31:0] layer_wParaNext_memAddrBias_V;
reg   [31:0] layer_wParaNext_memAddrBias_V_0_data_reg;
reg    layer_wParaNext_memAddrBias_V_0_vld_reg;
reg    layer_wParaNext_memAddrBias_V_0_ack_out;
wire   [31:0] layer_wParaNext_memAddrScale_V;
wire   [31:0] layer_wParaNext_memAddrMean_V;
wire   [31:0] layer_wParaNext_memAddrVariance_V;
wire   [18:0] layer_wParaNext_compressionSize_V;
wire   [15:0] layer_iPara_batchSize;
wire   [15:0] layer_iPara_width;
reg   [15:0] layer_iPara_width_0_data_reg;
reg    layer_iPara_width_0_vld_reg;
reg    layer_iPara_width_0_ack_out;
wire   [15:0] layer_iPara_height;
reg   [15:0] layer_iPara_height_0_data_reg;
reg    layer_iPara_height_0_vld_reg;
reg    layer_iPara_height_0_ack_out;
wire   [12:0] layer_iPara_ci_V;
wire   [12:0] layer_iPara_ciAlign_V;
reg   [12:0] layer_iPara_ciAlign_V_0_data_reg;
reg    layer_iPara_ciAlign_V_0_vld_reg;
reg    layer_iPara_ciAlign_V_0_ack_out;
wire   [12:0] layer_iPara_ciGroup_V;
reg   [12:0] layer_iPara_ciGroup_V_0_data_reg;
reg    layer_iPara_ciGroup_V_0_vld_reg;
reg    layer_iPara_ciGroup_V_0_ack_out;
wire   [31:0] layer_iPara_memAddrImgIn_V;
reg   [31:0] layer_iPara_memAddrImgIn_V_0_data_reg;
reg    layer_iPara_memAddrImgIn_V_0_vld_reg;
reg    layer_iPara_memAddrImgIn_V_0_ack_out;
wire   [15:0] layer_iParaNext_batchSize;
wire   [15:0] layer_iParaNext_width;
wire   [15:0] layer_iParaNext_height;
wire   [12:0] layer_iParaNext_ci_V;
reg   [12:0] layer_iParaNext_ci_V_0_data_reg;
reg    layer_iParaNext_ci_V_0_vld_reg;
reg    layer_iParaNext_ci_V_0_ack_out;
wire   [12:0] layer_iParaNext_ciAlign_V;
wire   [12:0] layer_iParaNext_ciGroup_V;
wire   [31:0] layer_iParaNext_memAddrImgIn_V;
wire   [15:0] layer_oPara_batchSize;
wire   [15:0] layer_oPara_width;
reg   [15:0] layer_oPara_width_0_data_reg;
reg    layer_oPara_width_0_vld_reg;
reg    layer_oPara_width_0_ack_out;
wire   [15:0] layer_oPara_height;
reg   [15:0] layer_oPara_height_0_data_reg;
reg    layer_oPara_height_0_vld_reg;
reg    layer_oPara_height_0_ack_out;
wire   [12:0] layer_oPara_co_V;
reg   [12:0] layer_oPara_co_V_0_data_reg;
reg    layer_oPara_co_V_0_vld_reg;
reg    layer_oPara_co_V_0_ack_out;
wire   [12:0] layer_oPara_coAlign_V;
wire   [12:0] layer_oPara_coGroup_V;
reg   [12:0] layer_oPara_coGroup_V_0_data_reg;
reg    layer_oPara_coGroup_V_0_vld_reg;
reg    layer_oPara_coGroup_V_0_ack_out;
wire   [31:0] layer_oPara_memAddrImgOut_V;
reg   [31:0] layer_oPara_memAddrImgOut_V_0_data_reg;
reg    layer_oPara_memAddrImgOut_V_0_vld_reg;
reg    layer_oPara_memAddrImgOut_V_0_ack_out;
wire   [15:0] layer_oParaNext_batchSize;
wire   [15:0] layer_oParaNext_width;
wire   [15:0] layer_oParaNext_height;
wire   [12:0] layer_oParaNext_co_V;
reg   [12:0] layer_oParaNext_co_V_0_data_reg;
reg    layer_oParaNext_co_V_0_vld_reg;
reg    layer_oParaNext_co_V_0_ack_out;
wire   [12:0] layer_oParaNext_coAlign_V;
wire   [12:0] layer_oParaNext_coGroup_V;
wire   [31:0] layer_oParaNext_memAddrImgOut_V;
wire    layer_cnvPara_relu;
reg    layer_cnvPara_relu_0_data_reg;
reg    layer_cnvPara_relu_0_vld_reg;
reg    layer_cnvPara_relu_0_ack_out;
wire   [15:0] layer_cnvPara_dilation;
wire   [4:0] layer_cnvPara_pad_h_V;
reg   [4:0] layer_cnvPara_pad_h_V_0_data_reg;
reg    layer_cnvPara_pad_h_V_0_vld_reg;
reg    layer_cnvPara_pad_h_V_0_ack_out;
wire   [4:0] layer_cnvPara_pad_w_V;
reg   [4:0] layer_cnvPara_pad_w_V_0_data_reg;
reg    layer_cnvPara_pad_w_V_0_vld_reg;
reg    layer_cnvPara_pad_w_V_0_ack_out;
wire   [4:0] layer_cnvPara_kernel_h_V;
reg   [4:0] layer_cnvPara_kernel_h_V_0_data_reg;
reg    layer_cnvPara_kernel_h_V_0_vld_reg;
reg    layer_cnvPara_kernel_h_V_0_ack_out;
wire   [4:0] layer_cnvPara_kernel_w_V;
reg   [4:0] layer_cnvPara_kernel_w_V_0_data_reg;
reg    layer_cnvPara_kernel_w_V_0_vld_reg;
reg    layer_cnvPara_kernel_w_V_0_ack_out;
wire   [4:0] layer_cnvPara_stride_h_V;
reg   [4:0] layer_cnvPara_stride_h_V_0_data_reg;
reg    layer_cnvPara_stride_h_V_0_vld_reg;
reg    layer_cnvPara_stride_h_V_0_ack_out;
wire   [4:0] layer_cnvPara_stride_w_V;
reg   [4:0] layer_cnvPara_stride_w_V_0_data_reg;
reg    layer_cnvPara_stride_w_V_0_vld_reg;
reg    layer_cnvPara_stride_w_V_0_ack_out;
wire    layer_cnvParaNext_relu;
wire   [15:0] layer_cnvParaNext_dilation;
wire   [4:0] layer_cnvParaNext_pad_h_V;
wire   [4:0] layer_cnvParaNext_pad_w_V;
wire   [4:0] layer_cnvParaNext_kernel_h_V;
reg   [4:0] layer_cnvParaNext_kernel_h_V_0_data_reg;
reg    layer_cnvParaNext_kernel_h_V_0_vld_reg;
reg    layer_cnvParaNext_kernel_h_V_0_ack_out;
wire   [4:0] layer_cnvParaNext_kernel_w_V;
wire   [4:0] layer_cnvParaNext_stride_h_V;
wire   [4:0] layer_cnvParaNext_stride_w_V;
wire   [15:0] layer_qPara_qM0;
reg   [15:0] layer_qPara_qM0_0_data_reg;
reg    layer_qPara_qM0_0_vld_reg;
reg    layer_qPara_qM0_0_ack_out;
wire   [31:0] layer_qPara_qN;
reg   [31:0] layer_qPara_qN_0_data_reg;
reg    layer_qPara_qN_0_vld_reg;
reg    layer_qPara_qN_0_ack_out;
wire   [31:0] layer_qPara_qZ1;
wire   [15:0] layer_qPara_qZ2;
reg   [15:0] layer_qPara_qZ2_0_data_reg;
reg    layer_qPara_qZ2_0_vld_reg;
reg    layer_qPara_qZ2_0_ack_out;
wire   [31:0] layer_qPara_qZ3;
reg   [31:0] layer_qPara_qZ3_0_data_reg;
reg    layer_qPara_qZ3_0_vld_reg;
reg    layer_qPara_qZ3_0_ack_out;
wire   [4:0] layer_poolPara_pad_h_V;
reg   [4:0] layer_poolPara_pad_h_V_0_data_reg;
reg    layer_poolPara_pad_h_V_0_vld_reg;
reg    layer_poolPara_pad_h_V_0_ack_out;
wire   [4:0] layer_poolPara_pad_w_V;
reg   [4:0] layer_poolPara_pad_w_V_0_data_reg;
reg    layer_poolPara_pad_w_V_0_vld_reg;
reg    layer_poolPara_pad_w_V_0_ack_out;
wire   [4:0] layer_poolPara_kernel_h_V;
reg   [4:0] layer_poolPara_kernel_h_V_0_data_reg;
reg    layer_poolPara_kernel_h_V_0_vld_reg;
reg    layer_poolPara_kernel_h_V_0_ack_out;
wire   [4:0] layer_poolPara_kernel_w_V;
reg   [4:0] layer_poolPara_kernel_w_V_0_data_reg;
reg    layer_poolPara_kernel_w_V_0_vld_reg;
reg    layer_poolPara_kernel_w_V_0_ack_out;
wire   [4:0] layer_poolPara_stride_h_V;
reg   [4:0] layer_poolPara_stride_h_V_0_data_reg;
reg    layer_poolPara_stride_h_V_0_vld_reg;
reg    layer_poolPara_stride_h_V_0_ack_out;
wire   [4:0] layer_poolPara_stride_w_V;
reg   [4:0] layer_poolPara_stride_w_V_0_data_reg;
reg    layer_poolPara_stride_w_V_0_vld_reg;
reg    layer_poolPara_stride_w_V_0_ack_out;
wire    layer_poolPara_pool_type;

wire    WEIGHTS_DDR_AWREADY;
wire    WEIGHTS_DDR_WREADY;
wire        WEIGHTS_DDR_ARVALID;
wire        WEIGHTS_DDR_ARREADY;
wire [31:0] WEIGHTS_DDR_ARADDR ;
//reg   [0:0] WEIGHTS_DDR_ARID;
wire [31:0] WEIGHTS_DDR_ARLEN  ;
//reg   [2:0] WEIGHTS_DDR_ARSIZE;
//reg   [1:0] WEIGHTS_DDR_ARBURST;
//reg   [1:0] WEIGHTS_DDR_ARLOCK;
//reg   [3:0] WEIGHTS_DDR_ARCACHE;
//reg   [2:0] WEIGHTS_DDR_ARPROT;
//reg   [3:0] WEIGHTS_DDR_ARQOS;
//reg   [3:0] WEIGHTS_DDR_ARREGION;
//reg   [0:0] WEIGHTS_DDR_ARUSER;
wire        WEIGHTS_DDR_RVALID  ;
wire        WEIGHTS_DDR_RREADY  ;
wire [127:0]WEIGHTS_DDR_RDATA   ;
wire        WEIGHTS_DDR_RLAST   ;
wire [0:0]  WEIGHTS_DDR_RID     ;
wire [0:0]  WEIGHTS_DDR_RUSER   ;
wire [1:0]  WEIGHTS_DDR_RRESP   ;
wire    WEIGHTS_DDR_BVALID;
wire   [1:0] WEIGHTS_DDR_BRESP;
wire   [0:0] WEIGHTS_DDR_BID;
wire   [0:0] WEIGHTS_DDR_BUSER;
wire    FIN_DDR_AWREADY;
wire    FIN_DDR_WREADY;
reg    FIN_DDR_ARVALID;
wire    FIN_DDR_ARREADY;
wire    FIN_DDR_RVALID;
reg    FIN_DDR_RREADY;
wire   [127:0] FIN_DDR_RDATA;
wire    FIN_DDR_RLAST;
wire   [0:0] FIN_DDR_RID;
wire   [0:0] FIN_DDR_RUSER;
wire   [1:0] FIN_DDR_RRESP;
wire    FIN_DDR_BVALID;
wire   [1:0] FIN_DDR_BRESP;
wire   [0:0] FIN_DDR_BID;
wire   [0:0] FIN_DDR_BUSER;
//reg    FOUT_DDR_AWVALID;
wire    FOUT_DDR_AWREADY;
reg    FOUT_DDR_WVALID;
wire    FOUT_DDR_WREADY;
wire    FOUT_DDR_ARREADY;
wire    FOUT_DDR_RVALID;
wire   [127:0] FOUT_DDR_RDATA;
wire    FOUT_DDR_RLAST;
wire   [0:0] FOUT_DDR_RID;
wire   [0:0] FOUT_DDR_RUSER;
wire   [1:0] FOUT_DDR_RRESP;
wire    FOUT_DDR_BVALID;
reg    FOUT_DDR_BREADY;
wire   [1:0] FOUT_DDR_BRESP;
wire   [0:0] FOUT_DDR_BID;
wire   [0:0] FOUT_DDR_BUSER;

// fi master channel
localparam C_M_AXI_FIADDR_WIDTH = C_M_AXI_FIN_DDR_ADDR_WIDTH   ;
localparam C_M_AXI_FIDATA_WIDTH = C_M_AXI_FIN_DDR_DATA_WIDTH   ; 
localparam C_M_AXI_FOADDR_WIDTH = C_M_AXI_FIN_DDR_ADDR_WIDTH   ;
localparam C_M_AXI_FODATA_WIDTH = C_M_AXI_FIN_DDR_DATA_WIDTH   ; 
localparam C_LBIAS_WIDTH        = 32 * 16                      ;

wire    [C_M_AXI_LEN_WIDTH-1 :0]S_fimaxi_arlen     ;
wire                            S_fimaxi_arready   ;   
wire                            S_fimaxi_arvalid   ;
wire  [C_M_AXI_FIADDR_WIDTH-1:0]S_fimaxi_araddr    ;
wire                            S_fimaxi_rready    ;
wire                            S_fimaxi_rvalid    ;
wire  [C_M_AXI_FIDATA_WIDTH-1:0]S_fimaxi_rdata     ; 
// fo master channel
wire    [C_M_AXI_LEN_WIDTH-1 :0]S_fomaxi_awlen     ;
wire                            S_fomaxi_awready   ;    
wire                            S_fomaxi_awvalid   ; 
wire  [C_M_AXI_FIADDR_WIDTH-1:0]S_fomaxi_awaddr    ; 
wire                            S_fomaxi_wready    ; 
wire                            S_fomaxi_wvalid    ; 
wire  [C_M_AXI_FODATA_WIDTH-1:0]S_fomaxi_wdata     ;    
wire                            S_fomaxi_bvalid    ; 
wire                            S_fomaxi_bready    ; 
wire  [  C_RAM_ADDR_WIDTH-1  :0]S_craddr           ;        
wire  [       C_COEF_DATA-1  :0]S_crdata           ;
wire  [  C_RAM_ADDR_WIDTH-1  :0]S_braddr           ;        
wire  [     C_LBIAS_WIDTH-1  :0]S_brdata           ;

cnna_axilite_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITE_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITE_DATA_WIDTH ))
cnna_axilite_s_axi_U(
    .AWVALID(s_axi_axilite_AWVALID),
    .AWREADY(s_axi_axilite_AWREADY),
    .AWADDR(s_axi_axilite_AWADDR),
    .WVALID(s_axi_axilite_WVALID),
    .WREADY(s_axi_axilite_WREADY),
    .WDATA(s_axi_axilite_WDATA),
    .WSTRB(s_axi_axilite_WSTRB),
    .ARVALID(s_axi_axilite_ARVALID),
    .ARREADY(s_axi_axilite_ARREADY),
    .ARADDR(s_axi_axilite_ARADDR),
    .RVALID(s_axi_axilite_RVALID),
    .RREADY(s_axi_axilite_RREADY),
    .RDATA(s_axi_axilite_RDATA),
    .RRESP(s_axi_axilite_RRESP),
    .BVALID(s_axi_axilite_BVALID),
    .BREADY(s_axi_axilite_BREADY),
    .BRESP(s_axi_axilite_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .wddr_V(wddr_V),
    .fiddr_V(fiddr_V),
    .foddr_V(foddr_V),
    .layer_enPara_cnvEn(layer_enPara_cnvEn),
    .layer_enPara_poolEn(layer_enPara_poolEn),
    .layer_wPara_curLayerNum(layer_wPara_curLayerNum),
    .layer_wPara_layerDivideType(layer_wPara_layerDivideType),
    .layer_wPara_sublayerNum_V(layer_wPara_sublayerNum_V),
    .layer_wPara_sublayerSeq_V(layer_wPara_sublayerSeq_V),
    .layer_wPara_subLayerFlag(layer_wPara_subLayerFlag),
    .layer_wPara_memAddrWeights_V(layer_wPara_memAddrWeights_V),
    .layer_wPara_memAddrBias_V(layer_wPara_memAddrBias_V),
    .layer_wPara_memAddrScale_V(layer_wPara_memAddrScale_V),
    .layer_wPara_memAddrMean_V(layer_wPara_memAddrMean_V),
    .layer_wPara_memAddrVariance_V(layer_wPara_memAddrVariance_V),
    .layer_wPara_compressionSize_V(layer_wPara_compressionSize_V),
    .layer_wParaNext_curLayerNum(layer_wParaNext_curLayerNum),
    .layer_wParaNext_layerDivideType(layer_wParaNext_layerDivideType),
    .layer_wParaNext_sublayerNum_V(layer_wParaNext_sublayerNum_V),
    .layer_wParaNext_sublayerSeq_V(layer_wParaNext_sublayerSeq_V),
    .layer_wParaNext_subLayerFlag(layer_wParaNext_subLayerFlag),
    .layer_wParaNext_memAddrWeights_V(layer_wParaNext_memAddrWeights_V),
    .layer_wParaNext_memAddrBias_V(layer_wParaNext_memAddrBias_V),
    .layer_wParaNext_memAddrScale_V(layer_wParaNext_memAddrScale_V),
    .layer_wParaNext_memAddrMean_V(layer_wParaNext_memAddrMean_V),
    .layer_wParaNext_memAddrVariance_V(layer_wParaNext_memAddrVariance_V),
    .layer_wParaNext_compressionSize_V(layer_wParaNext_compressionSize_V),
    .layer_iPara_batchSize(layer_iPara_batchSize),
    .layer_iPara_width(layer_iPara_width),
    .layer_iPara_height(layer_iPara_height),
    .layer_iPara_ci_V(layer_iPara_ci_V),
    .layer_iPara_ciAlign_V(layer_iPara_ciAlign_V),
    .layer_iPara_ciGroup_V(layer_iPara_ciGroup_V),
    .layer_iPara_memAddrImgIn_V(layer_iPara_memAddrImgIn_V),
    .layer_iParaNext_batchSize(layer_iParaNext_batchSize),
    .layer_iParaNext_width(layer_iParaNext_width),
    .layer_iParaNext_height(layer_iParaNext_height),
    .layer_iParaNext_ci_V(layer_iParaNext_ci_V),
    .layer_iParaNext_ciAlign_V(layer_iParaNext_ciAlign_V),
    .layer_iParaNext_ciGroup_V(layer_iParaNext_ciGroup_V),
    .layer_iParaNext_memAddrImgIn_V(layer_iParaNext_memAddrImgIn_V),
    .layer_oPara_batchSize(layer_oPara_batchSize),
    .layer_oPara_width(layer_oPara_width),
    .layer_oPara_height(layer_oPara_height),
    .layer_oPara_co_V(layer_oPara_co_V),
    .layer_oPara_coAlign_V(layer_oPara_coAlign_V),
    .layer_oPara_coGroup_V(layer_oPara_coGroup_V),
    .layer_oPara_memAddrImgOut_V(layer_oPara_memAddrImgOut_V),
    .layer_oParaNext_batchSize(layer_oParaNext_batchSize),
    .layer_oParaNext_width(layer_oParaNext_width),
    .layer_oParaNext_height(layer_oParaNext_height),
    .layer_oParaNext_co_V(layer_oParaNext_co_V),
    .layer_oParaNext_coAlign_V(layer_oParaNext_coAlign_V),
    .layer_oParaNext_coGroup_V(layer_oParaNext_coGroup_V),
    .layer_oParaNext_memAddrImgOut_V(layer_oParaNext_memAddrImgOut_V),
    .layer_cnvPara_relu(layer_cnvPara_relu),
    .layer_cnvPara_dilation(layer_cnvPara_dilation),
    .layer_cnvPara_pad_h_V(layer_cnvPara_pad_h_V),
    .layer_cnvPara_pad_w_V(layer_cnvPara_pad_w_V),
    .layer_cnvPara_kernel_h_V(layer_cnvPara_kernel_h_V),
    .layer_cnvPara_kernel_w_V(layer_cnvPara_kernel_w_V),
    .layer_cnvPara_stride_h_V(layer_cnvPara_stride_h_V),
    .layer_cnvPara_stride_w_V(layer_cnvPara_stride_w_V),
    .layer_cnvParaNext_relu(layer_cnvParaNext_relu),
    .layer_cnvParaNext_dilation(layer_cnvParaNext_dilation),
    .layer_cnvParaNext_pad_h_V(layer_cnvParaNext_pad_h_V),
    .layer_cnvParaNext_pad_w_V(layer_cnvParaNext_pad_w_V),
    .layer_cnvParaNext_kernel_h_V(layer_cnvParaNext_kernel_h_V),
    .layer_cnvParaNext_kernel_w_V(layer_cnvParaNext_kernel_w_V),
    .layer_cnvParaNext_stride_h_V(layer_cnvParaNext_stride_h_V),
    .layer_cnvParaNext_stride_w_V(layer_cnvParaNext_stride_w_V),
    .layer_qPara_qM0(layer_qPara_qM0),
    .layer_qPara_qN(layer_qPara_qN),
    .layer_qPara_qZ1(layer_qPara_qZ1),
    .layer_qPara_qZ2(layer_qPara_qZ2),
    .layer_qPara_qZ3(layer_qPara_qZ3),
    .layer_poolPara_pad_h_V(layer_poolPara_pad_h_V),
    .layer_poolPara_pad_w_V(layer_poolPara_pad_w_V),
    .layer_poolPara_kernel_h_V(layer_poolPara_kernel_h_V),
    .layer_poolPara_kernel_w_V(layer_poolPara_kernel_w_V),
    .layer_poolPara_stride_h_V(layer_poolPara_stride_h_V),
    .layer_poolPara_stride_w_V(layer_poolPara_stride_w_V),
    .layer_poolPara_pool_type(layer_poolPara_pool_type)
);

cnna_WEIGHTS_DDR_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 128 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_WEIGHTS_DDR_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_WEIGHTS_DDR_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_WEIGHTS_DDR_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_WEIGHTS_DDR_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_WEIGHTS_DDR_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_WEIGHTS_DDR_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_WEIGHTS_DDR_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_WEIGHTS_DDR_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_WEIGHTS_DDR_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_WEIGHTS_DDR_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_WEIGHTS_DDR_CACHE_VALUE ))
cnna_WEIGHTS_DDR_m_axi_U(
    .AWVALID(m_axi_WEIGHTS_DDR_AWVALID),
    .AWREADY(m_axi_WEIGHTS_DDR_AWREADY),
    .AWADDR(m_axi_WEIGHTS_DDR_AWADDR),
    .AWID(m_axi_WEIGHTS_DDR_AWID),
    .AWLEN(m_axi_WEIGHTS_DDR_AWLEN),
    .AWSIZE(m_axi_WEIGHTS_DDR_AWSIZE),
    .AWBURST(m_axi_WEIGHTS_DDR_AWBURST),
    .AWLOCK(m_axi_WEIGHTS_DDR_AWLOCK),
    .AWCACHE(m_axi_WEIGHTS_DDR_AWCACHE),
    .AWPROT(m_axi_WEIGHTS_DDR_AWPROT),
    .AWQOS(m_axi_WEIGHTS_DDR_AWQOS),
    .AWREGION(m_axi_WEIGHTS_DDR_AWREGION),
    .AWUSER(m_axi_WEIGHTS_DDR_AWUSER),
    .WVALID(m_axi_WEIGHTS_DDR_WVALID),
    .WREADY(m_axi_WEIGHTS_DDR_WREADY),
    .WDATA(m_axi_WEIGHTS_DDR_WDATA),
    .WSTRB(m_axi_WEIGHTS_DDR_WSTRB),
    .WLAST(m_axi_WEIGHTS_DDR_WLAST),
    .WID(m_axi_WEIGHTS_DDR_WID),
    .WUSER(m_axi_WEIGHTS_DDR_WUSER),
    .ARVALID(m_axi_WEIGHTS_DDR_ARVALID),
    .ARREADY(m_axi_WEIGHTS_DDR_ARREADY),
    .ARADDR(m_axi_WEIGHTS_DDR_ARADDR),
    .ARID(m_axi_WEIGHTS_DDR_ARID),
    .ARLEN(m_axi_WEIGHTS_DDR_ARLEN),
    .ARSIZE(m_axi_WEIGHTS_DDR_ARSIZE),
    .ARBURST(m_axi_WEIGHTS_DDR_ARBURST),
    .ARLOCK(m_axi_WEIGHTS_DDR_ARLOCK),
    .ARCACHE(m_axi_WEIGHTS_DDR_ARCACHE),
    .ARPROT(m_axi_WEIGHTS_DDR_ARPROT),
    .ARQOS(m_axi_WEIGHTS_DDR_ARQOS),
    .ARREGION(m_axi_WEIGHTS_DDR_ARREGION),
    .ARUSER(m_axi_WEIGHTS_DDR_ARUSER),
    .RVALID(m_axi_WEIGHTS_DDR_RVALID),
    .RREADY(m_axi_WEIGHTS_DDR_RREADY),
    .RDATA(m_axi_WEIGHTS_DDR_RDATA),
    .RLAST(m_axi_WEIGHTS_DDR_RLAST),
    .RID(m_axi_WEIGHTS_DDR_RID),
    .RUSER(m_axi_WEIGHTS_DDR_RUSER),
    .RRESP(m_axi_WEIGHTS_DDR_RRESP),
    .BVALID(m_axi_WEIGHTS_DDR_BVALID),
    .BREADY(m_axi_WEIGHTS_DDR_BREADY),
    .BRESP(m_axi_WEIGHTS_DDR_BRESP),
    .BID(m_axi_WEIGHTS_DDR_BID),
    .BUSER(m_axi_WEIGHTS_DDR_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(WEIGHTS_DDR_ARVALID),
    .I_ARREADY(WEIGHTS_DDR_ARREADY),
    .I_ARADDR(WEIGHTS_DDR_ARADDR),
//    .I_ARID(WEIGHTS_DDR_ARID),
    .I_ARID(1'b0),
    .I_ARLEN(WEIGHTS_DDR_ARLEN),
    //.I_ARSIZE(WEIGHTS_DDR_ARSIZE),
    .I_ARSIZE(3'b0),
    //.I_ARLOCK(WEIGHTS_DDR_ARLOCK),
    .I_ARLOCK(2'b0),
    //.I_ARCACHE(WEIGHTS_DDR_ARCACHE),
    .I_ARCACHE(4'b0),
    //.I_ARQOS(WEIGHTS_DDR_ARQOS),
    .I_ARQOS(4'b0),
    //.I_ARPROT(WEIGHTS_DDR_ARPROT),
    .I_ARPROT(3'b0),
    //.I_ARUSER(WEIGHTS_DDR_ARUSER),
    .I_ARUSER(1'b0),
    //.I_ARBURST(WEIGHTS_DDR_ARBURST),
    .I_ARBURST(2'b0),
    //.I_ARREGION(WEIGHTS_DDR_ARREGION),
    .I_ARREGION(4'b0),
    .I_RVALID(WEIGHTS_DDR_RVALID),
    .I_RREADY(WEIGHTS_DDR_RREADY),
    .I_RDATA(WEIGHTS_DDR_RDATA),
    .I_RID(WEIGHTS_DDR_RID),
    .I_RUSER(WEIGHTS_DDR_RUSER),
    .I_RRESP(WEIGHTS_DDR_RRESP),
    .I_RLAST(WEIGHTS_DDR_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(WEIGHTS_DDR_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(WEIGHTS_DDR_WREADY),
    .I_WDATA(128'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(16'd0),
    .I_BVALID(WEIGHTS_DDR_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(WEIGHTS_DDR_BRESP),
    .I_BID(WEIGHTS_DDR_BID),
    .I_BUSER(WEIGHTS_DDR_BUSER)
);

 cnna_FIN_DDR_m_axi #(
     .CONSERVATIVE( 0 ),
     .USER_DW( 128 ),
     .USER_AW( 32 ),
     .USER_MAXREQS( 5 ),
     .NUM_READ_OUTSTANDING( 16 ),
     .NUM_WRITE_OUTSTANDING( 16 ),
     .MAX_READ_BURST_LENGTH( 16 ),
     .MAX_WRITE_BURST_LENGTH( 16 ),
     .C_M_AXI_ID_WIDTH( C_M_AXI_FIN_DDR_ID_WIDTH ),
     .C_M_AXI_ADDR_WIDTH( C_M_AXI_FIN_DDR_ADDR_WIDTH ),
     .C_M_AXI_DATA_WIDTH( C_M_AXI_FIN_DDR_DATA_WIDTH ),
     .C_M_AXI_AWUSER_WIDTH( C_M_AXI_FIN_DDR_AWUSER_WIDTH ),
     .C_M_AXI_ARUSER_WIDTH( C_M_AXI_FIN_DDR_ARUSER_WIDTH ),
     .C_M_AXI_WUSER_WIDTH( C_M_AXI_FIN_DDR_WUSER_WIDTH ),
     .C_M_AXI_RUSER_WIDTH( C_M_AXI_FIN_DDR_RUSER_WIDTH ),
     .C_M_AXI_BUSER_WIDTH( C_M_AXI_FIN_DDR_BUSER_WIDTH ),
     .C_USER_VALUE( C_M_AXI_FIN_DDR_USER_VALUE ),
     .C_PROT_VALUE( C_M_AXI_FIN_DDR_PROT_VALUE ),
     .C_CACHE_VALUE( C_M_AXI_FIN_DDR_CACHE_VALUE ))
 cnna_FIN_DDR_m_axi_U(
     .AWVALID(m_axi_FIN_DDR_AWVALID),
     .AWREADY(m_axi_FIN_DDR_AWREADY),
     .AWADDR(m_axi_FIN_DDR_AWADDR),
     .AWID(m_axi_FIN_DDR_AWID),
     .AWLEN(m_axi_FIN_DDR_AWLEN),
     .AWSIZE(m_axi_FIN_DDR_AWSIZE),
     .AWBURST(m_axi_FIN_DDR_AWBURST),
     .AWLOCK(m_axi_FIN_DDR_AWLOCK),
     .AWCACHE(m_axi_FIN_DDR_AWCACHE),
     .AWPROT(m_axi_FIN_DDR_AWPROT),
     .AWQOS(m_axi_FIN_DDR_AWQOS),
     .AWREGION(m_axi_FIN_DDR_AWREGION),
     .AWUSER(m_axi_FIN_DDR_AWUSER),
     .WVALID(m_axi_FIN_DDR_WVALID),
     .WREADY(m_axi_FIN_DDR_WREADY),
     .WDATA(m_axi_FIN_DDR_WDATA),
     .WSTRB(m_axi_FIN_DDR_WSTRB),
     .WLAST(m_axi_FIN_DDR_WLAST),
     .WID(m_axi_FIN_DDR_WID),
     .WUSER(m_axi_FIN_DDR_WUSER),
     .ARVALID(m_axi_FIN_DDR_ARVALID),
     .ARREADY(m_axi_FIN_DDR_ARREADY),
     .ARADDR(m_axi_FIN_DDR_ARADDR),
     .ARID(m_axi_FIN_DDR_ARID),
     .ARLEN(m_axi_FIN_DDR_ARLEN),
     .ARSIZE(m_axi_FIN_DDR_ARSIZE),
     .ARBURST(m_axi_FIN_DDR_ARBURST),
     .ARLOCK(m_axi_FIN_DDR_ARLOCK),
     .ARCACHE(m_axi_FIN_DDR_ARCACHE),
     .ARPROT(m_axi_FIN_DDR_ARPROT),
     .ARQOS(m_axi_FIN_DDR_ARQOS),
     .ARREGION(m_axi_FIN_DDR_ARREGION),
     .ARUSER(m_axi_FIN_DDR_ARUSER),
     .RVALID(m_axi_FIN_DDR_RVALID),
     .RREADY(m_axi_FIN_DDR_RREADY),
     .RDATA(m_axi_FIN_DDR_RDATA),
     .RLAST(m_axi_FIN_DDR_RLAST),
     .RID(m_axi_FIN_DDR_RID),
     .RUSER(m_axi_FIN_DDR_RUSER),
     .RRESP(m_axi_FIN_DDR_RRESP),
     .BVALID(m_axi_FIN_DDR_BVALID),
     .BREADY(m_axi_FIN_DDR_BREADY),
     .BRESP(m_axi_FIN_DDR_BRESP),
     .BID(m_axi_FIN_DDR_BID),
     .BUSER(m_axi_FIN_DDR_BUSER),
     .ACLK(ap_clk),
     .ARESET(ap_rst_n_inv),
     .ACLK_EN(1'b1),
     .I_ARVALID (S_fimaxi_arvalid       ),
     .I_ARREADY (S_fimaxi_arready       ),
     .I_ARADDR  (S_fimaxi_araddr        ),
     .I_ARID    (1'b0                   ),
     .I_ARLEN   (S_fimaxi_arlen         ),
     .I_ARSIZE  (3'b0                   ),
     .I_ARLOCK  (2'b0                   ),
     .I_ARCACHE (4'b0                   ),
     .I_ARQOS   (4'b0                   ),
     .I_ARPROT  (3'b0                   ),
     .I_ARUSER  (1'b0                   ),
     .I_ARBURST (2'b0                   ),
     .I_ARREGION(4'b0                   ),
     .I_RVALID  (S_fimaxi_rvalid        ),
     .I_RREADY  (S_fimaxi_rready        ),
     .I_RDATA   (S_fimaxi_rdata         ),
     .I_RID(FIN_DDR_RID),
     .I_RUSER(FIN_DDR_RUSER),
     .I_RRESP(FIN_DDR_RRESP),
     .I_RLAST(FIN_DDR_RLAST),
     .I_AWVALID(1'b0),
     .I_AWREADY(FIN_DDR_AWREADY),
     .I_AWADDR(32'd0),
     .I_AWID(1'd0),
     .I_AWLEN(32'd0),
     .I_AWSIZE(3'd0),
     .I_AWLOCK(2'd0),
     .I_AWCACHE(4'd0),
     .I_AWQOS(4'd0),
     .I_AWPROT(3'd0),
     .I_AWUSER(1'd0),
     .I_AWBURST(2'd0),
     .I_AWREGION(4'd0),
     .I_WVALID(1'b0),
     .I_WREADY(FIN_DDR_WREADY),
     .I_WDATA(128'd0),
     .I_WID(1'd0),
     .I_WUSER(1'd0),
     .I_WLAST(1'b0),
     .I_WSTRB(16'd0),
     .I_BVALID(FIN_DDR_BVALID),
     .I_BREADY(1'b0),
     .I_BRESP(FIN_DDR_BRESP),
     .I_BID(FIN_DDR_BID),
     .I_BUSER(FIN_DDR_BUSER)
 );
 
 cnna_FOUT_DDR_m_axi #(
     .CONSERVATIVE( 0 ),
     .USER_DW( 128 ),
     .USER_AW( 32 ),
     .USER_MAXREQS( 5 ),
     .NUM_READ_OUTSTANDING( 16 ),
     .NUM_WRITE_OUTSTANDING( 16 ),
     .MAX_READ_BURST_LENGTH( 16 ),
     .MAX_WRITE_BURST_LENGTH( 16 ),
     .C_M_AXI_ID_WIDTH( C_M_AXI_FOUT_DDR_ID_WIDTH ),
     .C_M_AXI_ADDR_WIDTH( C_M_AXI_FOUT_DDR_ADDR_WIDTH ),
     .C_M_AXI_DATA_WIDTH( C_M_AXI_FOUT_DDR_DATA_WIDTH ),
     .C_M_AXI_AWUSER_WIDTH( C_M_AXI_FOUT_DDR_AWUSER_WIDTH ),
     .C_M_AXI_ARUSER_WIDTH( C_M_AXI_FOUT_DDR_ARUSER_WIDTH ),
     .C_M_AXI_WUSER_WIDTH( C_M_AXI_FOUT_DDR_WUSER_WIDTH ),
     .C_M_AXI_RUSER_WIDTH( C_M_AXI_FOUT_DDR_RUSER_WIDTH ),
     .C_M_AXI_BUSER_WIDTH( C_M_AXI_FOUT_DDR_BUSER_WIDTH ),
     .C_USER_VALUE( C_M_AXI_FOUT_DDR_USER_VALUE ),
     .C_PROT_VALUE( C_M_AXI_FOUT_DDR_PROT_VALUE ),
     .C_CACHE_VALUE( C_M_AXI_FOUT_DDR_CACHE_VALUE ))
 cnna_FOUT_DDR_m_axi_U(
     .AWVALID(m_axi_FOUT_DDR_AWVALID),
     .AWREADY(m_axi_FOUT_DDR_AWREADY),
     .AWADDR(m_axi_FOUT_DDR_AWADDR),
     .AWID(m_axi_FOUT_DDR_AWID),
     .AWLEN(m_axi_FOUT_DDR_AWLEN),
     .AWSIZE(m_axi_FOUT_DDR_AWSIZE),
     .AWBURST(m_axi_FOUT_DDR_AWBURST),
     .AWLOCK(m_axi_FOUT_DDR_AWLOCK),
     .AWCACHE(m_axi_FOUT_DDR_AWCACHE),
     .AWPROT(m_axi_FOUT_DDR_AWPROT),
     .AWQOS(m_axi_FOUT_DDR_AWQOS),
     .AWREGION(m_axi_FOUT_DDR_AWREGION),
     .AWUSER(m_axi_FOUT_DDR_AWUSER),
     .WVALID(m_axi_FOUT_DDR_WVALID),
     .WREADY(m_axi_FOUT_DDR_WREADY),
     .WDATA(m_axi_FOUT_DDR_WDATA),
     .WSTRB(m_axi_FOUT_DDR_WSTRB),
     .WLAST(m_axi_FOUT_DDR_WLAST),
     .WID(m_axi_FOUT_DDR_WID),
     .WUSER(m_axi_FOUT_DDR_WUSER),
     .ARVALID(m_axi_FOUT_DDR_ARVALID),
     .ARREADY(m_axi_FOUT_DDR_ARREADY),
     .ARADDR(m_axi_FOUT_DDR_ARADDR),
     .ARID(m_axi_FOUT_DDR_ARID),
     .ARLEN(m_axi_FOUT_DDR_ARLEN),
     .ARSIZE(m_axi_FOUT_DDR_ARSIZE),
     .ARBURST(m_axi_FOUT_DDR_ARBURST),
     .ARLOCK(m_axi_FOUT_DDR_ARLOCK),
     .ARCACHE(m_axi_FOUT_DDR_ARCACHE),
     .ARPROT(m_axi_FOUT_DDR_ARPROT),
     .ARQOS(m_axi_FOUT_DDR_ARQOS),
     .ARREGION(m_axi_FOUT_DDR_ARREGION),
     .ARUSER(m_axi_FOUT_DDR_ARUSER),
     .RVALID(m_axi_FOUT_DDR_RVALID),
     .RREADY(m_axi_FOUT_DDR_RREADY),
     .RDATA(m_axi_FOUT_DDR_RDATA),
     .RLAST(m_axi_FOUT_DDR_RLAST),
     .RID(m_axi_FOUT_DDR_RID),
     .RUSER(m_axi_FOUT_DDR_RUSER),
     .RRESP(m_axi_FOUT_DDR_RRESP),
     .BVALID(m_axi_FOUT_DDR_BVALID),
     .BREADY(m_axi_FOUT_DDR_BREADY),
     .BRESP(m_axi_FOUT_DDR_BRESP),
     .BID(m_axi_FOUT_DDR_BID),
     .BUSER(m_axi_FOUT_DDR_BUSER),
     .ACLK(ap_clk),
     .ARESET(ap_rst_n_inv),
     .ACLK_EN(1'b1),
     .I_ARVALID(1'b0),
     .I_ARREADY(FOUT_DDR_ARREADY),
     .I_ARADDR(32'd0),
     .I_ARID(1'd0),
     .I_ARLEN(32'd0),
     .I_ARSIZE(3'd0),
     .I_ARLOCK(2'd0),
     .I_ARCACHE(4'd0),
     .I_ARQOS(4'd0),
     .I_ARPROT(3'd0),
     .I_ARUSER(1'd0),
     .I_ARBURST(2'd0),
     .I_ARREGION(4'd0),
     .I_RVALID(FOUT_DDR_RVALID),
     .I_RREADY(1'b0),
     .I_RDATA(FOUT_DDR_RDATA),
     .I_RID(FOUT_DDR_RID),
     .I_RUSER(FOUT_DDR_RUSER),
     .I_RRESP(FOUT_DDR_RRESP),
     .I_RLAST(FOUT_DDR_RLAST),
     //.I_RVALID(1'b0),
     //.I_RREADY(1'b0),
     //.I_RDATA(128'd0),
     //.I_RID(1'b0),
     //.I_RUSER(1'b0),
     //.I_RRESP(2'b0),
     //.I_RLAST(1'b0),

     .I_AWVALID(S_fomaxi_awvalid),
     .I_AWREADY(S_fomaxi_awready),
     .I_AWADDR(S_fomaxi_awaddr),
     .I_AWID(1'b0),
     .I_AWLEN(S_fomaxi_awlen),
     .I_AWSIZE(3'b0),
     .I_AWLOCK(2'b0),
     .I_AWCACHE(4'b0),
     .I_AWQOS(4'b0),
     .I_AWPROT(3'b0),
     .I_AWUSER(1'b0),
     .I_AWBURST(2'b0),
     .I_AWREGION(4'b0),
     .I_WVALID(S_fomaxi_wvalid),
     .I_WREADY(S_fomaxi_wready),
     .I_WDATA(S_fomaxi_wdata),
     .I_WID(1'b0),
     .I_WUSER(1'b0),
     .I_WLAST(1'b0),
     .I_WSTRB(16'hffff),
     .I_BVALID(S_fomaxi_bvalid),
     .I_BREADY(S_fomaxi_bready),
     .I_BRESP(),
     .I_BID(),
     .I_BUSER()
 );

////////////////////////////////////////////////////////////////////////////////////////////////////
// Naming specification                                                                         
// (1) self code  
////////////////////////////////////////////////////////////////////////////////////////////////////

main_process #(
    .C_MEM_STYLE         ( "block"                      ),
    .C_POWER_OF_1ADOTS   ( 4                            ),
    .C_POWER_OF_PECI     ( 4                            ),
    .C_POWER_OF_PECO     ( 5                            ),
    .C_POWER_OF_PEPIX    ( 3                            ),
    .C_POWER_OF_PECODIV  ( 1                            ),
    .C_POWER_OF_RDBPIX   ( 1                            ), 
    .C_SUBLAYERS_WIDTH   (11                            )
    .C_DATA_WIDTH        ( 8                            ), 
    .C_QIBUF_WIDTH       ( 12                           ), 
    .C_QOBUF_WIDTH       ( 24                           ), 
    .C_CNV_K_WIDTH       ( 5                            ),
    .C_CNV_CH_WIDTH      ( 13                           ),
    .C_DIM_WIDTH         ( 16                           ),
    .C_M_AXI_LEN_WIDTH   ( 32                           ),
    .C_M_AXI_ADDR_WIDTH  ( 32                           ),
    .C_M_AXI_DATA_WIDTH  ( 128                          ),
    .C_COEF_DATA         (C_COEF_DATA                   ),
    .C_BIAS_DATA         (C_BIAS_DATA                   ),
    .C_RAM_ADDR_WIDTH    ( 9                            ),
    .C_RAM_DATA_WIDTH    ( 128                          ))
u_main_process(
    .I_clk               (ap_clk                        ),
    .I_rst               (ap_rst_n_inv                  ),
    .I_ap_start          (S_map_start                   ),
    .O_ap_done           (S_map_done                    ),
    .I_base_addr         (fiddr_V                       ),
    .I_cnv_en            (layer_enPara_cnvEn            ),
    .I_pool_en           (layer_enPara_poolEn           ),
    .I_sublayer_num      (layer_wPara_sublayerNum_V     ),
    .I_sublayer_seq      (layer_wPara_sublayerSeq_V     ),
    .I_ipara_addr_img_in (layer_iPara_memAddrImgIn_V    ),
    .I_kernel_h          (layer_cnvPara_kernel_h_V      ),
    .I_kernel_w          (layer_cnvPara_kernel_w_V      ),
    .I_stride_h          (layer_cnvPara_stride_h_V      ),
    .I_stride_w          (layer_cnvPara_stride_w_V      ),
    .I_pad_h             (layer_cnvPara_pad_h_V         ),
    .I_pad_w             (layer_cnvPara_pad_w_V         ),
    .I_opara_addr_img_out(layer_oPara_memAddrImgOut_V   ),
    .I_opara_width       (layer_oPara_width             ),
    .I_opara_height      (layer_oPara_height            ),
    .I_opara_co          (layer_oPara_co_V              ),
    //.I_ipara_ci          (layer_iPara_ci_V          ),
    .I_ipara_ci          (layer_iPara_ciAlign_V         ),
    .I_ipara_width       (layer_iPara_width             ),
    .I_ipara_height      (layer_iPara_height            ),
    .O_craddr            (S_craddr                      ),        
    .I_crdata            (S_crdata                      ),
    .O_braddr            (S_braddr                      ),        
    .I_brdata            (S_brdata                      ),
    .O_fimaxi_arlen      (S_fimaxi_arlen                ),
    .I_fimaxi_arready    (S_fimaxi_arready              ),   
    .O_fimaxi_arvalid    (S_fimaxi_arvalid              ),
    .O_fimaxi_araddr     (S_fimaxi_araddr               ),
    .O_fimaxi_rready     (S_fimaxi_rready               ),
    .I_fimaxi_rvalid     (S_fimaxi_rvalid               ),
    .I_fimaxi_rdata      (S_fimaxi_rdata                ), 
    .O_fomaxi_awlen      (S_fomaxi_awlen                ),
    .I_fomaxi_awready    (S_fomaxi_awready              ),   
    .O_fomaxi_awvalid    (S_fomaxi_awvalid              ),
    .O_fomaxi_awaddr     (S_fomaxi_awaddr               ),
    .I_fomaxi_wready     (S_fomaxi_wready               ),
    .O_fomaxi_wvalid     (S_fomaxi_wvalid               ),
    .O_fomaxi_wdata      (S_fomaxi_wdata                ),   
    .I_fomaxi_bvalid     (S_fomaxi_bvalid               ),
    .O_fomaxi_bready     (S_fomaxi_bready               )
);

load_all_weights #(
    .MEM_STYLE          ( "block"           ),
    .C_POWER_OF_1ADOTS  ( 4                 ),
    .C_POWER_OF_PECI    ( 4                 ),
    .C_POWER_OF_PECO    ( 5                 ),
    .C_POWER_OF_PECODIV ( 1                 ),
    .C_CNV_K_WIDTH      ( 5                 ),
    .C_CNV_CH_WIDTH     ( 13                ),
    .C_M_AXI_LEN_WIDTH  ( 32                ), 
    .C_M_AXI_ADDR_WIDTH ( 32                ),
    .C_M_AXI_DATA_WIDTH ( 128               ),
    .C_COEF_DATA        (C_COEF_DATA        ),
    .C_BIAS_DATA        (C_BIAS_DATA        ),
    .C_LBIAS_WIDTH      (C_LBIAS_WIDTH      ), 
    .C_RAM_ADDR_WIDTH   (C_RAM_ADDR_WIDTH   ),
    .C_RAM_DATA_WIDTH   (C_RAM_DATA_WIDTH   ))
u0_load_all_weights(
    .I_clk           (ap_clk                            ),
    .I_rst           (ap_rst_n_inv                      ),
    .I_ap_start      (S_wap_start                       ),
    .O_ap_done       (S_wap_done                        ),
    .I_next_kernel   (layer_cnvParaNext_kernel_h_V      ),
    .I_next_ci       (layer_iParaNext_ci_V              ),
    .I_next_co       (layer_oParaNext_co_V              ),
    .I_next_w_addr   (layer_wParaNext_memAddrWeights_V  ),
    .I_next_b_addr   (layer_wParaNext_memAddrBias_V     ),
    .I_base_addr     (wddr_V                            ),
    .I_craddr        (S_craddr                          ),        
    .O_crdata        (S_crdata                          ),
    .I_braddr        (S_braddr                          ),        
    .O_brdata        (S_brdata                          ),
    .O_maxi_arlen    (WEIGHTS_DDR_ARLEN                 ),
    .I_maxi_arready  (WEIGHTS_DDR_ARREADY               ),   
    .O_maxi_arvalid  (WEIGHTS_DDR_ARVALID               ),
    .O_maxi_araddr   (WEIGHTS_DDR_ARADDR                ),
    .O_maxi_rready   (WEIGHTS_DDR_RREADY                ),
    .I_maxi_rvalid   (WEIGHTS_DDR_RVALID                ),
    .I_maxi_rdata    (WEIGHTS_DDR_RDATA                 )
);

// ap bus
always @(posedge ap_clk)begin
    if(ap_start)begin
        if(ap_start && (~ap_start_1d))begin
            S_ap_cnt <= 2'b01       ;
        end
        else if(S_wap_done)begin
            S_ap_cnt <= 2'b10       ;
        end
        else if(S_map_done)begin
            S_ap_cnt <= 2'b00       ;
        end
        else begin
            S_ap_cnt <= S_ap_cnt    ;
        end
    end
    else begin
            S_ap_cnt <= 2'b00       ; 
    end
end

always @(posedge ap_clk)begin
    ap_start_1d <= ap_start     ;
    S_wap_start <= S_ap_cnt[0]  ;
    S_map_start <= S_ap_cnt[1]  ;
end

always @(posedge ap_clk)begin
    ap_done <= S_map_done;
end

always @(posedge ap_clk)begin
    ap_rst_n_inv <= ~ap_rst_n;
end

assign ap_ready = ap_done;

endmodule //cnna

